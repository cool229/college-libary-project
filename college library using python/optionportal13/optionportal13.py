#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    May 18, 2018 05:55:15 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import optionportal13_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = _CHOOSE_OPTION (root)
    optionportal13_support.init(root, top)
    root.mainloop()

w = None
def create__CHOOSE_OPTION(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = _CHOOSE_OPTION (w)
    optionportal13_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy__CHOOSE_OPTION():
    global w
    w.destroy()
    w = None


class _CHOOSE_OPTION:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {Segoe UI} -size 14 -weight bold -slant "  \
            "italic -underline 1 -overstrike 0"

        top.geometry("514x272+831+176")
        top.title(" CHOOSE OPTION")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.Label1 = Label(top)
        self.Label1.place(relx=0.25, rely=0.22, height=44, width=259)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Choose Option''')

        self.viewbookslistbutoon = Button(top)
        self.viewbookslistbutoon.place(relx=0.04, rely=0.63, height=42
                , width=208)
        self.viewbookslistbutoon.configure(activebackground="#d9d9d9")
        self.viewbookslistbutoon.configure(activeforeground="#000000")
        self.viewbookslistbutoon.configure(background="#d9d9d9")
        self.viewbookslistbutoon.configure(command=optionportal13_support.viewbookslistfunction)
        self.viewbookslistbutoon.configure(disabledforeground="#a3a3a3")
        self.viewbookslistbutoon.configure(foreground="#000000")
        self.viewbookslistbutoon.configure(highlightbackground="#d9d9d9")
        self.viewbookslistbutoon.configure(highlightcolor="black")
        self.viewbookslistbutoon.configure(pady="0")
        self.viewbookslistbutoon.configure(text='''View Books List''')

        self.searchbooksbutton = Button(top)
        self.searchbooksbutton.place(relx=0.54, rely=0.63, height=42, width=218)
        self.searchbooksbutton.configure(activebackground="#d9d9d9")
        self.searchbooksbutton.configure(activeforeground="#000000")
        self.searchbooksbutton.configure(background="#d9d9d9")
        self.searchbooksbutton.configure(command=optionportal13_support.searchbooksfunction)
        self.searchbooksbutton.configure(disabledforeground="#a3a3a3")
        self.searchbooksbutton.configure(foreground="#000000")
        self.searchbooksbutton.configure(highlightbackground="#d9d9d9")
        self.searchbooksbutton.configure(highlightcolor="black")
        self.searchbooksbutton.configure(pady="0")
        self.searchbooksbutton.configure(text='''Search Books''')

        self.logoutbutton = Button(top)
        self.logoutbutton.place(relx=0.86, rely=0.0, height=42, width=82)
        self.logoutbutton.configure(activebackground="#d9d9d9")
        self.logoutbutton.configure(activeforeground="#000000")
        self.logoutbutton.configure(background="#d9d9d9")
        self.logoutbutton.configure(command=optionportal13_support.logoutfunction)
        self.logoutbutton.configure(disabledforeground="#a3a3a3")
        self.logoutbutton.configure(foreground="#000000")
        self.logoutbutton.configure(highlightbackground="#d9d9d9")
        self.logoutbutton.configure(highlightcolor="black")
        self.logoutbutton.configure(pady="0")
        self.logoutbutton.configure(text='''Logout''')






if __name__ == '__main__':
    vp_start_gui()



